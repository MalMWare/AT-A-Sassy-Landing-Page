@use "config" as c;
@use "btnConfig" as bc;
@use "utilities" as u;

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: c.$light-color;
  font-family: c.$font-stack;
  line-height: 1;
}

img {
  border-radius: 50%;
  width: 100%;
}

a {
  text-decoration: none;
  color: u.text-color-picker(c.$primary-color);
}

.hero {
  // This is where the bulk of the SCSS styling needs to be done

  // Take a look at the other files we've built already. How can they be useful here?

  // Also, take time to review the features of SCSS we've already covered:
  // 1. $variables
  // 2. nesting (dont forget about the ampersand (&) parent selector!)
  // 3. At-Rules
  @include u.set-bg(c.$primary-color);

  nav {
    display:grid;
    grid: 1fr / auto auto;
    align-items: center;
  }

  ul {
    list-style: none;
    display: flex;
    justify-content: space-around;
  }

  h1 {
    font-size: 4rem;
  }

  h1.banner {
    font-size: 1.5rem;
  }

  p {
    font-size: 1.3rem;
  }

  &-content {
    display: grid;
    grid: 1fr / 1fr 1fr;
    align-items: center;
    justify-content: center;
    gap: 2%
  }
}

// This code is related to some of the aspects of SCSS we have yet to cover.
// While you don't have to mess with it, it would be advisable to attempt to understand its functionality.
$spaceamounts: (1,2,3,4,5);

@each $space in $spaceamounts {
  .m-#{$space} {
    margin: #{$space}rem;
  }
  .my-#{$space} {
    margin: #{$space}rem 0;
  }

  .p-#{$space} {
    padding: #{$space}rem;
  }
  .py-#{$space} {
    padding: #{$space}rem 0;
  }
}
